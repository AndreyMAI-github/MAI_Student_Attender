// Generated by view binder compiler. Do not edit!
package com.mai.mai_student_attender.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.tabs.TabItem;
import com.google.android.material.tabs.TabLayout;
import com.mai.mai_student_attender.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDisciplineListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText DisciplineList;

  @NonNull
  public final ConstraintLayout DisciplineNav;

  @NonNull
  public final TabItem Hat;

  @NonNull
  public final TabItem Home;

  @NonNull
  public final TabItem People;

  @NonNull
  public final LinearLayout Spisok;

  @NonNull
  public final TabItem String;

  @NonNull
  public final TabLayout Tablo;

  @NonNull
  public final Button button;

  @NonNull
  public final ConstraintLayout constraintLayout;

  private ActivityDisciplineListBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText DisciplineList, @NonNull ConstraintLayout DisciplineNav,
      @NonNull TabItem Hat, @NonNull TabItem Home, @NonNull TabItem People,
      @NonNull LinearLayout Spisok, @NonNull TabItem String, @NonNull TabLayout Tablo,
      @NonNull Button button, @NonNull ConstraintLayout constraintLayout) {
    this.rootView = rootView;
    this.DisciplineList = DisciplineList;
    this.DisciplineNav = DisciplineNav;
    this.Hat = Hat;
    this.Home = Home;
    this.People = People;
    this.Spisok = Spisok;
    this.String = String;
    this.Tablo = Tablo;
    this.button = button;
    this.constraintLayout = constraintLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDisciplineListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDisciplineListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_discipline_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDisciplineListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DisciplineList;
      EditText DisciplineList = ViewBindings.findChildViewById(rootView, id);
      if (DisciplineList == null) {
        break missingId;
      }

      ConstraintLayout DisciplineNav = (ConstraintLayout) rootView;

      id = R.id.Hat;
      TabItem Hat = ViewBindings.findChildViewById(rootView, id);
      if (Hat == null) {
        break missingId;
      }

      id = R.id.Home;
      TabItem Home = ViewBindings.findChildViewById(rootView, id);
      if (Home == null) {
        break missingId;
      }

      id = R.id.People;
      TabItem People = ViewBindings.findChildViewById(rootView, id);
      if (People == null) {
        break missingId;
      }

      id = R.id.Spisok;
      LinearLayout Spisok = ViewBindings.findChildViewById(rootView, id);
      if (Spisok == null) {
        break missingId;
      }

      id = R.id.String;
      TabItem String = ViewBindings.findChildViewById(rootView, id);
      if (String == null) {
        break missingId;
      }

      id = R.id.Tablo;
      TabLayout Tablo = ViewBindings.findChildViewById(rootView, id);
      if (Tablo == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      return new ActivityDisciplineListBinding((ConstraintLayout) rootView, DisciplineList,
          DisciplineNav, Hat, Home, People, Spisok, String, Tablo, button, constraintLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
